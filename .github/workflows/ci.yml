name: ⚙️ CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: 🎨 Lint
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🎨 Run ESLint
        run: bun run lint

      - name: ✨ Check Prettier formatting
        run: bun run format:check

      - name: 🔍 TypeScript type checking
        run: bun run type-check

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🧪 Run tests
        run: bun run test

      - name: 📊 Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
          verbose: true

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏗️ Build application
        run: bun run build

      - name: 📁 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  commitlint:
    name: 📝 Commit Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 📝 Validate commit messages
        run: bunx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  security:
    name: 🔐 Security
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔍 Run security audit
        run: bun audit

  size-check:
    name: 📦 Bundle Size Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏗️ Build with bundle analysis
        run: bun run build:analyze
        continue-on-error: true

      - name: 📊 Comment bundle size
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            try {
              // This is a placeholder - you'd need to implement actual bundle size reporting
              const comment = `## 📦 Bundle Size Report

              Build completed successfully!

              For detailed bundle analysis, check the build artifacts or run \`bun run build:analyze\` locally.
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Bundle size report not available');
            }

  status-check:
    name: ✅ Status Check
    runs-on: ubuntu-latest
    needs: [lint, test, build, commitlint, security]
    if: always()
    steps:
      - name: ✅ All checks passed
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        run: echo "🎉 All checks passed!"

      - name: ❌ Some checks failed
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: |
          echo "❌ Some checks failed!"
          exit 1
